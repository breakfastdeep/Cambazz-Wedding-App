{"version":3,"sources":["paperSelect.tsx"],"names":["PaperSelect","inputRef","label","arrayList","selectedArrayList","multiEnable","errorText","value","onSelection","selectAllEnable","selectAllText","containerStyle","dialogStyle","dialogTitle","dialogTitleStyle","searchStyle","disabled","checkboxColor","checkboxLabelStyle","checkboxUncheckedColor","errorStyle","textInputMode","underlineColor","activeUnderlineColor","activeOutlineColor","outlineColor","textInputBackgroundColor","textInputColor","textInputHeight","textInputStyle","dialogButtonLabelStyle","hideSearchBox","searchPlaceholder","modalCloseButtonText","modalDoneButtonText","theme","searchKey","setSearchKey","arrayHolder","setArrayHolder","list","setList","selectedList","setSelectedList","selfInputRef","selectInputRef","visible","setVisible","showDialog","_hideDialog","data","selectedData","finalText","forEach","val","index","el","_id","length","text","current","blur","_closeDialog","_onFocus","_onChecked","item","indexSelected","findIndex","splice","push","_onCheckedSingle","_exists","_temp","find","_isCheckedAll","_checkAll","slice","_renderListForMulti","map","key","flexDirection","alignItems","_renderListForSingle","_filterFunction","newData","filter","toLowerCase","includes","styles","container","backgroundColor","color","height","undefined","justifyContent","alignSelf","alignContent","borderRadius","paddingVertical","paddingHorizontal","margin","iconColor","borderColor","borderWidth","marginBottom","marginHorizontal","textColor","width","marginTop","StyleSheet","create"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable prettier/prettier */\n/* eslint-disable react-native/no-inline-styles */\nimport React, { memo, useRef, useState } from 'react';\nimport {\n  View,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  ScrollView,\n} from 'react-native';\nimport {\n  TextInput,\n  Button,\n  Dialog,\n  Portal,\n  Searchbar,\n} from 'react-native-paper';\nimport CheckboxInput from '../components/checkBox';\nimport type { list, paperSelect } from '../interface/paperSelect.interface';\n\nconst PaperSelect = ({\n  inputRef,\n  label,\n  arrayList,\n  selectedArrayList,\n  multiEnable,\n  errorText,\n  value,\n  onSelection,\n  selectAllEnable = true,\n  selectAllText = \"Select All\",\n  containerStyle,\n  dialogStyle,\n  dialogTitle,\n  dialogTitleStyle,\n  searchStyle,\n  disabled = false,\n  checkboxColor,\n  checkboxLabelStyle,\n  checkboxUncheckedColor,\n  errorStyle,\n  textInputMode,\n  underlineColor,\n  activeUnderlineColor,\n  activeOutlineColor,\n  outlineColor,\n  textInputBackgroundColor,\n  textInputColor,\n  textInputHeight,\n  textInputStyle,\n  dialogButtonLabelStyle,\n  hideSearchBox,\n  searchPlaceholder,\n  modalCloseButtonText,\n  modalDoneButtonText,\n  theme\n}: paperSelect) => {\n  const [searchKey, setSearchKey] = useState<string>('');\n\n  const [arrayHolder, setArrayHolder] = useState<Array<list>>([...arrayList]);\n  const [list, setList] = useState<Array<list>>([...arrayList]);\n  const [selectedList, setSelectedList] = useState<Array<list>>([...selectedArrayList]);\n\n  const selfInputRef = useRef<any>(null);\n  const selectInputRef = inputRef ?? selfInputRef;\n\n  const [visible, setVisible] = useState<boolean>(false);\n\n  const showDialog = () => setVisible(true);\n\n  const _hideDialog = () => {\n    setSearchKey(\"\");\n    var data: Array<list> = [...arrayHolder];\n    // console.log(selectedList);\n    var selectedData: Array<list> = [...selectedList];\n    // console.log(selectedData);\n    let finalText: string = \"\";\n    selectedData.forEach((val, index) => {\n      data.forEach((el) => {\n        if (val._id === el._id) {\n          finalText += (index !== selectedData.length - 1) ? `${el.value}, ` : `${el.value}`;\n        }\n      });\n    });\n\n    onSelection({\n      text: finalText,\n      selectedList: selectedData,\n    });\n\n\n    setVisible(false);\n\n    if (selectInputRef && selectInputRef.current) {\n      selectInputRef.current.blur();\n    }\n  };\n\n  const _closeDialog = () => {\n    setVisible(false);\n    setSearchKey(\"\");\n    if (selectInputRef && selectInputRef.current) {\n      selectInputRef.current.blur();\n    }\n  };\n\n  const _onFocus = () => {\n    setArrayHolder([...arrayList]);\n    setList([...arrayList]);\n    setSelectedList([...selectedArrayList]);\n    showDialog();\n  };\n\n  const _onChecked = (item: any) => {\n    var selectedData = [...selectedList];\n    // const index = data.findIndex(x => x._id === item._id);\n    const indexSelected = selectedData.findIndex((val) => val._id === item._id);\n    if (indexSelected > -1) {\n      selectedData.splice(indexSelected, 1);\n    } else {\n      selectedData.push(item);\n    }\n    setSelectedList([...selectedData]);\n  };\n\n  const _onCheckedSingle = (item: any) => {\n    var selectedData = [...selectedList];\n    // const index = data.findIndex(x => x._id === item._id);\n    const indexSelected = selectedData.findIndex((val) => val._id === item._id);\n    if (indexSelected > -1) {\n      // selectedData.splice(indexSelected, 1);\n      selectedData = [];\n    } else {\n      selectedData = [];\n      selectedData.push(item);\n    }\n    // console.log(selectedData);\n    setSelectedList([...selectedData]);\n  };\n\n  const _exists = (item: any) => {\n    // console.log(selectedList);\n    let _temp = [...selectedList]\n    return _temp.find((val: any) => val._id === item._id) ? true : false;\n  };\n\n  const _isCheckedAll = () => {\n    const data = [...list];\n    const selectedData = [...selectedList];\n    return selectedData.length !== 0 && selectedData.length === data.length;\n  };\n\n  const _checkAll = () => {\n    const data = [...list];\n    var selectedData = [...selectedList];\n    if (selectedData.length === data.length) {\n      selectedData = [];\n    } else if (selectedData.length === 0 || selectedData.length > 0) {\n      selectedData = data.slice(0);\n    }\n\n    setSelectedList([...selectedData]);\n  };\n\n  const _renderListForMulti = () => {\n    return list.map((item, key) => {\n      return (\n        <TouchableOpacity\n          style={{ flexDirection: 'row', alignItems: 'center' }}\n          key={key}\n          onPress={() => {\n            _onChecked(item);\n          }}\n        >\n          <CheckboxInput\n            isChecked={_exists(item)}\n            label={item.value}\n            checkboxLabelStyle={checkboxLabelStyle}\n            checkboxColor={checkboxColor}\n            checkboxUncheckedColor={checkboxUncheckedColor}\n          />\n        </TouchableOpacity>\n      );\n    });\n  };\n\n  const _renderListForSingle = () => {\n    return list.map((item, key) => {\n      return (\n        <TouchableOpacity\n          style={{ flexDirection: 'row', alignItems: 'center' }}\n          key={key}\n          onPress={() => {\n            _onCheckedSingle(item);\n          }}\n        >\n          <CheckboxInput\n            isChecked={_exists(item)}\n            label={item.value}\n            checkboxLabelStyle={checkboxLabelStyle}\n            checkboxColor={checkboxColor}\n            checkboxUncheckedColor={checkboxUncheckedColor}\n          />\n        </TouchableOpacity>\n      );\n    });\n  };\n\n  const _filterFunction = (text: string) => {\n    setSearchKey(text);\n    const newData = arrayHolder.filter((item) =>\n      item.value.toLowerCase().includes(text.toLowerCase())\n    );\n    setList(newData);\n  };\n\n  return (\n    <>\n      <View style={[styles.container, containerStyle]}>\n        <TextInput\n          ref={selectInputRef}\n          disabled={disabled}\n          style={{\n            ...textInputStyle,\n            backgroundColor: textInputBackgroundColor || '#fff',\n            color: textInputColor || '#000',\n            height: textInputHeight,\n          }}\n          label={label}\n          underlineColor={underlineColor || 'black'}\n          activeUnderlineColor={activeUnderlineColor || 'black'}\n          activeOutlineColor={activeOutlineColor || 'black'}\n          outlineColor={outlineColor || 'black'}\n          mode={textInputMode || 'outlined'}\n          onFocus={disabled ? undefined : _onFocus}\n          showSoftInputOnFocus={false}\n          value={value}\n          right={\n            <TextInput.Icon\n              style={{\n                justifyContent: 'center',\n                alignItems: 'center',\n                alignSelf: 'center',\n                alignContent: 'center',\n              }}\n              size={20}\n              // name=\"chevron-down\"\n              icon=\"chevron-down\"\n            />\n          }\n          theme={theme}\n        />\n        {errorText ? (\n          <Text style={{ ...errorStyle, color: errorStyle?.color || 'red' }}>\n            {errorText}\n          </Text>\n        ) : null}\n      </View>\n\n      <View>\n        <Portal>\n          <Dialog\n            style={{\n              backgroundColor: dialogStyle?.backgroundColor || 'white',\n              borderRadius: dialogStyle?.borderRadius || 5,\n            }}\n            visible={visible}\n            dismissable={false}\n          >\n            <Dialog.Title style={dialogTitleStyle}>{dialogTitle ?? label}</Dialog.Title>\n            <Dialog.Content>\n              <Dialog.ScrollArea\n                style={{\n                  height: 300,\n                  paddingVertical: 10,\n                  paddingHorizontal: 0,\n                }}\n              >\n                {hideSearchBox ? <Text style={{ margin: 0, height: 0 }} /> : <Searchbar\n                  value={searchKey}\n                  placeholder={searchPlaceholder || \"Search\"}\n                  onChangeText={(text: string) => _filterFunction(text)}\n                  iconColor={searchStyle?.iconColor || 'black'}\n                  style={{\n                    borderRadius: searchStyle?.borderRadius || 5,\n                    borderColor: searchStyle?.borderColor || '#e5e5e5',\n                    backgroundColor: searchStyle?.backgroundColor || '#e5e5e5',\n                    borderWidth: 0.5,\n                    marginBottom: 10,\n                    marginHorizontal: 8,\n                    color: searchStyle?.textColor || '#000',\n                  }}\n                />}\n                {(multiEnable === true && selectAllEnable === true) && (\n                  <TouchableOpacity\n                    style={{ flexDirection: 'row', alignItems: 'center' }}\n                    onPress={() => {\n                      _checkAll();\n                    }}\n                  >\n                    <CheckboxInput\n                      isChecked={_isCheckedAll()}\n                      label={selectAllText}\n                      checkboxLabelStyle={checkboxLabelStyle}\n                      checkboxColor={checkboxColor}\n                      checkboxUncheckedColor={checkboxUncheckedColor}\n                    />\n                  </TouchableOpacity>\n                )}\n                <ScrollView\n                  style={{ width: '100%' }}\n                  persistentScrollbar={true}\n                  showsVerticalScrollIndicator={true}\n                  keyboardShouldPersistTaps=\"handled\"\n                >\n                  {multiEnable === true\n                    ? _renderListForMulti()\n                    : _renderListForSingle()}\n                </ScrollView>\n              </Dialog.ScrollArea>\n            </Dialog.Content>\n            <Dialog.Actions style={{ marginTop: -20 }}>\n              <Button labelStyle={dialogButtonLabelStyle} onPress={_closeDialog}>\n                {modalCloseButtonText || \"Close\"}\n              </Button>\n              <Button labelStyle={dialogButtonLabelStyle} onPress={_hideDialog}>\n                {modalDoneButtonText || \"Done\"}\n              </Button>\n            </Dialog.Actions>\n          </Dialog>\n        </Portal>\n      </View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    marginBottom: 10,\n  },\n});\n\nexport default memo(PaperSelect);\n"]}